var e=Object.getOwnPropertyNames,r=(r,t)=>function(){return t||(0,r[e(r)[0]])((t={exports:{}}).exports,t),t.exports},t=r({"Render-Network/Server/DefaultOptions.json"(e,r){r.exports={blenderVersion:"3.6.0",start:0,end:100,port:8080,timeoutLimit:6e5}}}),n=r({"Render-Network/Server/Project.js"(e,r){var t=require("path"),n=require("fs");r.exports={getProject:function(){return n.readFileSync(t.resolve(__dirname,`./Project/${o[0]}`))},getWork:function(){}};var o=n.readdirSync(t.resolve(__dirname,"./Project"));o.length>1&&console.log(`Found Multiple Projects:\n${o.map((e=>`| ${e}`)).join("\n")}\nThe Network Will Only Render "${o[0]}" And Ignore The Rest`),".blend"!==t.parse(o[0]).ext&&(console.log(`File "${o[0]}" Is Not A Blender Project`),process.exit())}}),o=r({"Render-Network/Server/HttpServer.js"(e,r){var t=require("path"),o=require("http"),s=require("url"),i=require("fs"),l=JSON.parse(i.readFileSync(t.resolve(__dirname,"Options.json")));r.exports=()=>{o.createServer(((e,r)=>{let t=s.parse(e.url).pathname.split("/");t.splice(0,1),"Connect"===t[0]?r.end(JSON.stringify({blenderVersion:l.blenderVersion})):"GetProject"===t[0]&&r.end(a())})).listen(l.port,(()=>console.log(`Http Server Listening On ${l.port}`)))};var{getProject:a,getWork:c}=n()}}),s=require("path"),i=require("fs"),l=t();i.existsSync(s.resolve(__dirname,"./Options.json"))&&!i.statSync(s.resolve(__dirname,"./Options.json")).isDirectory()||i.writeFileSync(s.resolve(__dirname,"./Options.json"),JSON.stringify(l,null,2)),i.existsSync(s.resolve(__dirname,"./Project"))&&!i.statSync(s.resolve(__dirname,"./Project")).isFile()||i.mkdirSync(s.resolve(__dirname,"./Project")),i.existsSync(s.resolve(__dirname,"./Output"))&&!i.statSync(s.resolve(__dirname,"./Project")).isFile()||i.mkdirSync(s.resolve(__dirname,"./Output")),o()();